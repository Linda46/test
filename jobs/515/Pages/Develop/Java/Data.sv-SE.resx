<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Section1_Heading1" xml:space="preserve">
    <value>Datatjänster</value>
  </data>
  <data name="Section1_Heading2" xml:space="preserve">
    <value>Grunder</value>
  </data>
  <data name="Section1_Heading3_Text1" xml:space="preserve">
    <value> Vägledning:</value>
  </data>
  <data name="Section1_Heading3_Text2" xml:space="preserve">
    <value>Datahantering och affärsanalys</value>
  </data>
  <data name="Section1_Text1" xml:space="preserve">
    <value>Läs mer om tekniker i Azure för att jobba med relations- och icke-relationsdata.</value>
  </data>
  <data name="Section1_Heading4_Text1" xml:space="preserve">
    <value> Vägledning:</value>
  </data>
  <data name="Section1_Heading4_Text2" xml:space="preserve">
    <value>Datahantering: Välja rätt teknik</value>
  </data>
  <data name="Section1_Text2" xml:space="preserve">
    <value>Läs mer om olika scenarier för datahantering i Azure.</value>
  </data>
  <data name="Section1_Heading5" xml:space="preserve">
    <value>Azure Lagring</value>
  </data>
  <data name="Section1_Heading6_Text1" xml:space="preserve">
    <value> Funktionsguide:</value>
  </data>
  <data name="Section1_Heading6_Text2" xml:space="preserve">
    <value>Blob-tjänst</value>
  </data>
  <data name="Section1_Text3" xml:space="preserve">
    <value>Blob-lagring är det enklaste sättet att lagra stora mängder ostrukturerad text eller binära data som video, ljud och bild. Blob-lagring är en ISO 27001-certifierad och hanterad tjänst som kan skaländras automatiskt upp till att lagra 100 terabyte data. De är tillgängliga från i stort sett var som helst via REST och klient-API:er.</value>
  </data>
  <data name="Section1_Heading7_Text1" xml:space="preserve">
    <value> Funktionsguide:</value>
  </data>
  <data name="Section1_Heading7_Text2" xml:space="preserve">
    <value>Tabelltjänst</value>
  </data>
  <data name="Section1_Text4" xml:space="preserve">
    <value>Tabeller innehåller NoSQL-funktioner och används för program som kräver lagring av stora mängder ostrukturerade data. Tabeller är en ISO 27001-certifierad och hanterad tjänst som kan skaländras automatiskt upp till att lagra 100 terabyte data. De är tillgängliga från i stort ett var som helst via REST och hanterade API:er.</value>
  </data>
  <data name="Section1_Heading8_Text1" xml:space="preserve">
    <value> Självstudiekurs:</value>
  </data>
  <data name="Section1_Heading8_Text2" xml:space="preserve">
    <value>Skapa en marknadsplats för avbildningar som använder Blob-lagring</value>
  </data>
  <data name="Section1_Text5" xml:space="preserve">
    <value>Skapa ett program som lagrar avbildningar i Azure Blob-lagring. Du lär dig hur du använder Azure-klientbiblioteken för Java och hur du arbetar med lagring i Azure.</value>
  </data>
  <data name="Section1_Heading9_Text1" xml:space="preserve">
    <value> Så här:</value>
  </data>
  <data name="Section1_Heading9_Text2" xml:space="preserve">
    <value>Använd din egen domän med blob-lagring</value>
  </data>
  <data name="Section1_Text6" xml:space="preserve">
    <value>Konfigurera ditt lagringskonto så att din domän mappas mot blob-tjänstens slutpunkt och användarna ser ditt domännamn i programmets webbadress.</value>
  </data>
  <data name="Section1_Heading10" xml:space="preserve">
    <value>Relationsdata</value>
  </data>
  <data name="Section1_Heading11_Text1" xml:space="preserve">
    <value> Funktionsguide:</value>
  </data>
  <data name="Section1_Heading11_Text2" xml:space="preserve">
    <value>SQL Database</value>
  </data>
  <data name="Section1_Text7" xml:space="preserve">
    <value>För program som behöver en relationsdatabastjänst med full funktionalitet erbjuder Azure SQL-databas, tidigare känd som SQL Azure Database. SQL-databasen har en hög nivå av interoperabilitet, och kunderna kan använda många av de stora ramverken för programutveckling.</value>
  </data>
  <data name="Section1_Heading12_Text1" xml:space="preserve">
    <value> Så här:</value>
  </data>
  <data name="Section1_Heading12_Text2" xml:space="preserve">
    <value>Hantera Azure SQL-databas med SQL Server Management Studio</value>
  </data>
  <data name="Section1_Text8" xml:space="preserve">
    <value>Du kan använda SQL Server Management Studio och hantera logiska SQL-servrar och -databaser. Den här artikeln innehåller mer information om att skapa och hantera databaser och inloggningar samt övervakning med Dynamic Management Views.</value>
  </data>
  <data name="Section1_Heading13_Text1" xml:space="preserve">
    <value> Självstudiekurs:</value>
  </data>
  <data name="Section1_Heading13_Text2" xml:space="preserve">
    <value>Migrera ett Java Spring Framework-program till Azure och Azure SQL-databasen</value>
  </data>
  <data name="Section1_Text9" xml:space="preserve">
    <value>Den här självstudien visar hur du migrerar ett fullständigt Spring Framework-program (Java Pet Clinic) till Azure, inklusive användningen av Azure SQL-databasen med JPA/Hibernate och de senaste JDBC-drivrutinerna för SQL Server.</value>
  </data>
  <data name="Section1_Heading14_Text1" xml:space="preserve">
    <value> Självstudiekurs:</value>
  </data>
  <data name="Section1_Heading14_Text2" xml:space="preserve">
    <value>Skapa ett Java-webbprogram med DocumentDB</value>
  </data>
  <data name="Section1_Text10" xml:space="preserve">
    <value>Den här självstudien visar hur du använder Azure DocumentDB-tjänsten för att lagra och komma åt data från ett Java-program som har Azure Websites som värd.</value>
  </data>
  <data name="Section1_Heading11" xml:space="preserve">
    <value>Icke-relationsdata</value>
  </data>
</root>