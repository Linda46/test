<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Section1_Heading1" xml:space="preserve">
    <value>Datatjenester</value>
  </data>
  <data name="Section1_Heading2" xml:space="preserve">
    <value>Grundlæggende oplysninger</value>
  </data>
  <data name="Section1_Heading3_Text1" xml:space="preserve">
    <value> Vejledning:</value>
  </data>
  <data name="Section1_Heading3_Text2" xml:space="preserve">
    <value>Dataadministration og virksomhedsanalyse</value>
  </data>
  <data name="Section1_Text1" xml:space="preserve">
    <value>Få mere at vide om de teknologier i Azure, der hjælper dig med at arbejde med både relations- og ikke-relationsdata.</value>
  </data>
  <data name="Section1_Heading4_Text1" xml:space="preserve">
    <value> Vejledning:</value>
  </data>
  <data name="Section1_Heading4_Text2" xml:space="preserve">
    <value>Dataadministration: Vælg den rette teknologi</value>
  </data>
  <data name="Section1_Text2" xml:space="preserve">
    <value>Få mere at vide om forskellige scenarier for teknologier til dataadministraton i Azure.</value>
  </data>
  <data name="Section1_Heading5" xml:space="preserve">
    <value>Azure Storage</value>
  </data>
  <data name="Section1_Heading6_Text1" xml:space="preserve">
    <value> Funktionsvejledning:</value>
  </data>
  <data name="Section1_Heading6_Text2" xml:space="preserve">
    <value>Blob-tjeneste</value>
  </data>
  <data name="Section1_Text3" xml:space="preserve">
    <value>BLOBS er den letteste lagermetode til store mængder ustruktureret tekst og binære data, som f.eks. video, lyd og billeder. BLOBS er en ISO 27001-certificeret administreret tjeneste, der kan autoskalere til at gemme op til 100 terabyte data. De er tilgængelige fra næsten hvor som helst via REST- og klient-API&apos;er.</value>
  </data>
  <data name="Section1_Heading7_Text1" xml:space="preserve">
    <value> Funktionsvejledning:</value>
  </data>
  <data name="Section1_Heading7_Text2" xml:space="preserve">
    <value>Table-tjeneste</value>
  </data>
  <data name="Section1_Text4" xml:space="preserve">
    <value>Tabeller giver NoSQL-funktionalitet til programmer, der kræver lagring af store mængder ustrukturerede data. Tabeller er en ISO 27001-certificeret administreret tjeneste, der kan autoskalere til at gemme op til 100 terabyte data. De er tilgængelige fra næsten hvor som helst via REST og administrerede API&apos;er.</value>
  </data>
  <data name="Section1_Heading8_Text1" xml:space="preserve">
    <value> Selvstudium:</value>
  </data>
  <data name="Section1_Heading8_Text2" xml:space="preserve">
    <value>Opret en afbildningsmarkedsplads, der bruger Blob-lagring</value>
  </data>
  <data name="Section1_Text5" xml:space="preserve">
    <value>Opret et program, der lagrer billeder i Azure Blog-lager. Du får flere oplysninger om, hvordan du bruger Azure-klientbiblioteker til Java, og hvordan du arbejder med Azure Storage.</value>
  </data>
  <data name="Section1_Heading9_Text1" xml:space="preserve">
    <value> Sådan gør du:</value>
  </data>
  <data name="Section1_Heading9_Text2" xml:space="preserve">
    <value>Brug et brugerdefineret domæne med bloblageret</value>
  </data>
  <data name="Section1_Text6" xml:space="preserve">
    <value>Konfigurer din lagerkonto for at knytte dit brugerdefinerede domæne til Blob-tjenestens slutpunkt, så brugere kan se dit domænenavn i URL-adresserne til dit program.</value>
  </data>
  <data name="Section1_Heading10" xml:space="preserve">
    <value>Relationsdata</value>
  </data>
  <data name="Section1_Heading11_Text1" xml:space="preserve">
    <value> Funktionsvejledning:</value>
  </data>
  <data name="Section1_Heading11_Text2" xml:space="preserve">
    <value>SQL-database</value>
  </data>
  <data name="Section1_Text7" xml:space="preserve">
    <value>I forbindelse med de programmer, der skal bruge en altomfattende relationsdatabase-as-a-service, tilbydes SQL Database, tidligere kendt som SQL Azure Database, i Azure. SQL Database tilbyder et højt niveau af interoperabilitet, som gør det muligt for kunder at udvikle programmer ved hjælp af de større udviklingsstrukturer.</value>
  </data>
  <data name="Section1_Heading12_Text1" xml:space="preserve">
    <value> Sådan gør du:</value>
  </data>
  <data name="Section1_Heading12_Text2" xml:space="preserve">
    <value>Administrer Azure SQL Database ved hjælp af SQL Server Management Studio</value>
  </data>
  <data name="Section1_Text8" xml:space="preserve">
    <value>Du kan bruge SQL Server Management Studio til at styre de logiske servere og databaser i SQL Database. Denne artikel indeholder oplysninger om, hvordan du opretter og administrerer databaser, opretter og administrerer logons og overvåger ved hjælp af Dynamic Management Views.</value>
  </data>
  <data name="Section1_Heading13_Text1" xml:space="preserve">
    <value> Selvstudium:</value>
  </data>
  <data name="Section1_Heading13_Text2" xml:space="preserve">
    <value>Overfør et Java Spring Framework-program til Azure og Azure SQL Database</value>
  </data>
  <data name="Section1_Text9" xml:space="preserve">
    <value>I dette end-to-end-selvstudium vises, hvordan du overfører et komplet Spring Framework-program (Java Pet Clinic) til Azure, herunder hvordan du bruger Azure SQL Database med JPA/Hibernate ved hjælp af de nyeste JDBC-drivere til SQL Server.</value>
  </data>
  <data name="Section1_Heading14_Text1" xml:space="preserve">
    <value> Selvstudium:</value>
  </data>
  <data name="Section1_Heading14_Text2" xml:space="preserve">
    <value>Byg et Java-webprogram vha. DocumentDB</value>
  </data>
  <data name="Section1_Text10" xml:space="preserve">
    <value>Dette selvstudium viser dig, hvordan du bruger Azure DocumentDB-tjenesten til at lagre og få adgang til data fra et Java-program, som er hostet på Azure Websites.</value>
  </data>
  <data name="Section1_Heading11" xml:space="preserve">
    <value>Ikke-relationelle data</value>
  </data>
</root>