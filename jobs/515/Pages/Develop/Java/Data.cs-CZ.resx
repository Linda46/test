<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Section1_Heading1" xml:space="preserve">
    <value>Datové služby</value>
  </data>
  <data name="Section1_Heading2" xml:space="preserve">
    <value>Základy</value>
  </data>
  <data name="Section1_Heading3_Text1" xml:space="preserve">
    <value> Pokyny:</value>
  </data>
  <data name="Section1_Heading3_Text2" xml:space="preserve">
    <value>Správa dat a obchodní analýza</value>
  </data>
  <data name="Section1_Text1" xml:space="preserve">
    <value>Získejte informace o technologiích Azure, které usnadňují práci s relačními i nerelačními daty.</value>
  </data>
  <data name="Section1_Heading4_Text1" xml:space="preserve">
    <value> Pokyny:</value>
  </data>
  <data name="Section1_Heading4_Text2" xml:space="preserve">
    <value>Správa dat: Výběr vhodné technologie</value>
  </data>
  <data name="Section1_Text2" xml:space="preserve">
    <value>Prostudujte si informace o různých scénářích použití technologií správy dat v Azure.</value>
  </data>
  <data name="Section1_Heading5" xml:space="preserve">
    <value>Úložiště Azure</value>
  </data>
  <data name="Section1_Heading6_Text1" xml:space="preserve">
    <value> Průvodce funkcemi:</value>
  </data>
  <data name="Section1_Heading6_Text2" xml:space="preserve">
    <value>Služba objektů blob</value>
  </data>
  <data name="Section1_Text3" xml:space="preserve">
    <value>Bloby představují nejjednodušší způsob, jak ukládat velké objemy nestrukturovaných textových nebo binárních dat, jako jsou videa, zvuková data nebo obrázky. Služba objektů blob je spravovaná služba s certifikací ISO 27001, která se dá automaticky škálovat na uložení až 100 TB dat. Prostřednictvím rozhraní REST a klientských rozhraní API je dostupná prakticky odkudkoli.</value>
  </data>
  <data name="Section1_Heading7_Text1" xml:space="preserve">
    <value> Průvodce funkcemi:</value>
  </data>
  <data name="Section1_Heading7_Text2" xml:space="preserve">
    <value>Služba tabulek</value>
  </data>
  <data name="Section1_Text4" xml:space="preserve">
    <value>Tabulky umožňují použití technologie NoSQL u aplikací, které vyžadují ukládání velkých objemů nestrukturovaných dat. Služba tabulek je spravovaná služba s certifikací ISO 27001, která se dá automaticky škálovat na uložení až 100 TB dat. Prostřednictvím rozhraní REST a spravovaných rozhraní API je dostupná prakticky odkudkoli.</value>
  </data>
  <data name="Section1_Heading8_Text1" xml:space="preserve">
    <value> Kurz:</value>
  </data>
  <data name="Section1_Heading8_Text2" xml:space="preserve">
    <value>Vytvoření tržiště imagí, které využívá úložiště objektů blob</value>
  </data>
  <data name="Section1_Text5" xml:space="preserve">
    <value>Vytvořte aplikaci, která ukládá obrázky do úložiště objektů blob Azure. Zjistíte, jak používat klientské knihovny Azure pro Javu a jak pracovat s úložištěm Azure.</value>
  </data>
  <data name="Section1_Heading9_Text1" xml:space="preserve">
    <value> Postupy:</value>
  </data>
  <data name="Section1_Heading9_Text2" xml:space="preserve">
    <value>Použití vlastní domény pro úložiště objektů blob</value>
  </data>
  <data name="Section1_Text6" xml:space="preserve">
    <value>Nakonfigurujte účet úložiště tak, aby na koncový bod Služby objektů blob mapoval vaši vlastní doménu. Díky tomuto nastavení budou adresy URL vaší aplikace obsahovat název vaší domény.</value>
  </data>
  <data name="Section1_Heading10" xml:space="preserve">
    <value>Relační data</value>
  </data>
  <data name="Section1_Heading11_Text1" xml:space="preserve">
    <value> Průvodce funkcemi:</value>
  </data>
  <data name="Section1_Heading11_Text2" xml:space="preserve">
    <value>Databáze SQL</value>
  </data>
  <data name="Section1_Text7" xml:space="preserve">
    <value>U aplikací, které vyžadují plně funkční relační databázi jako službu, nabízí Azure Databázi SQL (dřív označovanou jako Databáze SQL Azure). Databáze SQL nabízí vysokou úroveň interoperability a umožňuje zákazníkům vytvářet aplikace pomocí spousty oblíbených platforem pro vývoj.</value>
  </data>
  <data name="Section1_Heading12_Text1" xml:space="preserve">
    <value> Postupy:</value>
  </data>
  <data name="Section1_Heading12_Text2" xml:space="preserve">
    <value>Správa Databáze SQL Azure v SQL Server Management Studiu</value>
  </data>
  <data name="Section1_Text8" xml:space="preserve">
    <value>Databáze SQL a jejich logické servery můžete spravovat v SQL Server Management Studiu. Tento článek obsahuje podrobné informace o vytváření a správě databází, vytváření a správě přihlašovacích jmen a monitorování pomocí Zobrazení dynamické správy.</value>
  </data>
  <data name="Section1_Heading13_Text1" xml:space="preserve">
    <value> Kurz:</value>
  </data>
  <data name="Section1_Heading13_Text2" xml:space="preserve">
    <value>Migrace aplikace s architekturou Java Spring na Azure a Databázi SQL Azure</value>
  </data>
  <data name="Section1_Text9" xml:space="preserve">
    <value>Tento komplexní kurz ukazuje, jak migrovat úplnou aplikaci s architekturou Spring (Java Pet Clinic) na Azure, včetně použití Databáze SQL Azure s JPA/Hibernate pomocí nejnovějších ovladačů JDBC pro SQL Server.</value>
  </data>
  <data name="Section1_Heading14_Text1" xml:space="preserve">
    <value> Kurz:</value>
  </data>
  <data name="Section1_Heading14_Text2" xml:space="preserve">
    <value>Vytvoření webové aplikace Java pomocí služby DocumentDB</value>
  </data>
  <data name="Section1_Text10" xml:space="preserve">
    <value>Tento kurz vám ukáže, jak používat službu Azure DocumentDB k ukládání a přístupu k datům z aplikace Java hostované na Webech Azure.</value>
  </data>
  <data name="Section1_Heading11" xml:space="preserve">
    <value>Nerelační data</value>
  </data>
</root>